class UsersController < ApplicationController

	# what authenticated users are allowed to do
	before_filter :authenticate, :only => [:edit, :update, :index, :destroy]
	
	# only the correct_user can use these methods
  before_filter :correct_user, :only => [:edit, :update]

	# only the admin_user can perform these methods
	before_filter :admin_user,   :only => [:destroy, :index]

	# get the user details and display
	def show
		@user = User.find(params[:id])
		@alerts = @user.alerts.paginate(:page => params[:page])
		@title = @user.name
	end

	# shows admin list of all users
	def index
    @title = "All users"
    @users = User.paginate(:page => params[:page])
  end

	# signup page
	def new
		@user = User.new
		@title = "Sign up"
	end

	# destroys a user from the db
	def destroy
    User.find(params[:id]).destroy
    flash[:success] = "User destroyed."
    redirect_to users_path
  end

	# this method creates a new user if details are entered correctly.
	# and also signs the user in.
	def create
		@user = User.new(params[:user])
	
		#@twitter_client = TwitterClient.new
		#twitter = @user.twitter
		if @user.password.size > 6
		if @user.save
=begin
			Twitter.configure do |config|
				config.consumer_key = 'CaePG6UQIlMjsWIVlycyw'
				config.consumer_secret = '6IU3EKExSgX5x0QCI3IEmCWLB4lhddpoO7Tz7IGZnI'
				config.oauth_token = '472855669-kgZFqYcxhc67jwNs4lmdLWprat0dDLUNRXPyxpYU'
				config.oauth_token_secret = 'F2zW6f4BnhFDktNN9OH8LXxHY4bfhWnvIOUXp6OAYhk'
			end

			begin
				Twitter.direct_message_create(@user.twitter, "Welcome to tweet me my bus")
			rescue Twitter::Error::Unauthorized => e
				puts e
			# what to do in the rescue of a failed message		
			end
=end
			sign_in @user
			flash[:success] = "Welcome to Tweet Me My Bus! Check your twitter inbox confirming your id"
			redirect_to @user
		else
			@title = "Sign up"
			render 'new'
		end
end
	end

	def edit
    @user = User.find(params[:id])
    @title = "Edit user"
  end

	def update
    @user = User.find(params[:id])
    if @user.update_attributes(params[:user])
      flash[:success] = "Profile updated."
      redirect_to @user
    else
      @title = "Edit user"
      render 'edit'
    end
  end
	
	private

		def admin_user
      redirect_to(root_path) unless current_user.admin?
    end

    def authenticate
      deny_access unless signed_in?
    end

    def correct_user
      @user = User.find(params[:id])
      redirect_to(root_path) unless current_user?(@user)
    end

end
